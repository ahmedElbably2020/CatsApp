{"version":3,"sources":["logo.png","Components/Slider.js","Pages/Home.js","Components/ProductItem.js","Pages/Products.js","Api/Products.js","Pages/Product.js","Store/actions.js","Store/actionTypes.js","Components/CartItem.js","Pages/Cart.js","Pages/NotFounded.js","Components/Navbar.js","Store/Store.js","Store/reducers.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Slider","className","Home","ProductItem","props","img","name","price","ProductId","src","alt","style","color","fontWeight","to","Products","useState","products","setProducts","useEffect","Promise","resolve","data","then","map","cat","key","id","image","connect","add_to_cart","productInfo","quantity","dispatch","type","create_add_to_cart","product","setProduct","setQuantity","quantityError","setQuantityError","find","item","getById","match","params","productData","description","min","value","onChange","e","target","onClick","addToCart","remove_from_cart","index","create_remove_from_cart","total","icon","faTrash","state","allCart","cart","totalPrice","reduce","acc","clear_cart","length","CartItem","NotFounded","totalQuantity","logo","width","height","data-toggle","data-target","aria-controls","aria-expanded","aria-label","faShoppingCart","path","exact","component","Product","Cart","store","createStore","action","newState","splice","localStorage","getItem","JSON","parse","err","loadState","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","getState","setItem","stringify","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.862a1958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c449987d.png\";","import React from 'react'\n\nfunction Slider() {\n    return (\n        <div className='landing-page d-flex align-items-center position-relative'>\n            <div>\n                <h1 className='text-white'>Hellow In Cats Market</h1>\n                <p className='mt-4 w-50'>\n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged\n                </p>\n                <button className='btn mt-4 p-2 rounded-pill'>Read More</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Slider\n","import React from 'react'\nimport Slider from '../Components/Slider'\nfunction Home() {\n    return (\n        <div>\n            <Slider />\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nfunction ProductItem(props) {\n    const { img, name, price, ProductId } = props\n    return (\n        <div className=\"card my-3 border-0\">\n            <div className='img-container position-relative'>\n                <img className=\"card-img-top\" src={img} alt=\"Card image cap\" />\n            </div>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{name}</h5>\n                <p className=\"card-text\" style={{ color: 'green', fontWeight: 'bold' }}>Price: {price}$</p>\n                <Link to={`/products/${ProductId}`} className=\"btn btn-primary rounded-pill px-4 position-relative overflow-hidden\">Buy</Link>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProductItem\n","import React, { useState, useEffect } from 'react'\nimport ProductItem from '../Components/ProductItem'\nimport { getAll } from '../Api/Products'\n\nfunction Products() {\n\n    const [products, setProducts] = useState([])\n\n    useEffect(() => {\n        getAll().then(data => {\n            setProducts(data)\n        })\n\n    }, [])\n    return (\n        <div className='container mt-4'>\n            <h1>Products</h1>\n            <div className='row'>\n                {\n                    products.map(cat => {\n                        return <div className='col-4' key={cat.id}>\n                            <ProductItem img={cat.image} name={cat.name} price={cat.price} ProductId={cat.id} />\n                        </div>\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Products\n","import data from './products.json'\n\nexport function getAll() {\n    return Promise.resolve(data)\n}\n\nexport function getById(id) {\n    const product = data.find(item => item.id === id)\n    return Promise.resolve(product)\n}","import React, { useState, useEffect } from 'react'\nimport { getById } from '../Api/Products'\nimport { connect } from 'react-redux'\nimport { add_to_cart } from '../Store/actions'\n\nfunction Product(props) {\n\n    const [product, setProduct] = useState({})\n    const [quantity, setQuantity] = useState(0)\n    const [quantityError, setQuantityError] = useState(false)\n\n    useEffect(() => {\n        const productId = props.match.params.id\n        getById(+productId).then(productData => {\n            setProduct(productData)\n        })\n\n    }, [])\n\n    let handleQuantityChange = e => {\n        setQuantity(e.target.value)\n    }\n\n    let addToCart = (product) => {\n        if (+quantity !== 0) {\n            props.add_to_cart(product, quantity)\n            setQuantityError(false)\n        } else {\n            setQuantityError(true)\n        }\n    }\n    return (\n\n        <div className='container mt-5'>\n            <div className='row'>\n                <div className='col-5'>\n                    <img src={product.image} className='img-fluid' />\n                </div>\n                <div className='col-7'>\n                    <h2>{product.name}</h2>\n                    <p className='badge badge-success rounded-pill mt-3 d-inline-block p-2'>Price : {product.price}</p>\n                    <p className='text-muted mt-2 product-desc'>{product.description}</p>\n                    <div className='mt-4 d-flex align-items-center'>\n                        Quantity :\n                        <input type='number' min='0' className='ml-3' value={quantity} onChange={handleQuantityChange} />\n                        {\n                            quantity == 0 ? null : (\n                                <div className='ml-3 text-success font-weight-bold'>\n                                    Total : {quantity * product.price} $\n                                </div>\n                            )\n                        }\n                    </div>\n                    {\n                        quantityError ? <div className='badge badge-danger w-100 p-3 mt-3'>Please Enter Quantity</div> : null\n                    }\n                    <button className='btn mt-4 text-white rounded-pill addToCart p-2 px-4' onClick={() => addToCart(product)}>Add To Cart</button>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\n\nexport default connect(null, { add_to_cart })(Product)\n","import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from './actionTypes'\n\nfunction create_add_to_cart(productInfo, quantity) {\n    return {\n        type: ADD_TO_CART,\n        productInfo,\n        quantity\n    }\n}\n\n// Uses Redux Thunk\nexport function add_to_cart(productInfo, quantity) {\n    return (dispatch) => {\n        dispatch(create_add_to_cart(productInfo, quantity))\n    }\n}\n\n\nfunction create_remove_from_cart(index) {\n    return {\n        type: REMOVE_FROM_CART,\n        index\n    }\n}\n\n// Uses Redux Thunk\nexport function remove_from_cart(index) {\n    return (dispatch) => {\n        dispatch(create_remove_from_cart(index))\n    }\n}\n\nfunction create_clear_cart() {\n    return {\n        type: CLEAR_CART\n    }\n}\n\n// Uses Redux Thunk\nexport function clear_cart() {\n    return (dispatch) => {\n        dispatch(create_clear_cart())\n    }\n}","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\nexport const CLEAR_CART = 'CLEAR_CART'","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { connect } from 'react-redux'\nimport { remove_from_cart } from '../Store/actions'\n\nfunction ProductItem(props) {\n    const { id, img, name, price, quantity, total } = props\n\n    return (\n        <div className=\"card my-3\">\n            <div className='img-container position-relative'>\n                <img className=\"card-img-top\" src={img} alt=\"Card image cap\" />\n            </div>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{name}</h5>\n                <div className='card-product-desc'>\n                    <p className=\"card-text my-1\">Price: {price}$</p>\n                    <p className=\"card-text my-1\">Quantity: {quantity}</p>\n                    <p className=\"card-text my-1 badge badge-info p-2 rounded-pill\">Total: {total}$</p>\n                </div>\n                <button className=\"btn text-white mt-2 rounded-pill px-3\" onClick={() => props.remove_from_cart(id)}>\n                    Delete\n                    <FontAwesomeIcon icon={faTrash} className='ml-2' />\n                </button>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default connect(null, { remove_from_cart })(ProductItem)\n","import React from 'react'\nimport CartItem from '../Components/CartItem'\nimport { connect } from 'react-redux'\nimport { clear_cart } from '../Store/actions'\nfunction Products(props) {\n\n    const { allCart, totalPrice } = props\n\n    const clearCart = () => {\n        props.clear_cart()\n    }\n\n    return (\n\n        <div className='container mt-4'>\n            <h1>Cart</h1>\n            <div className='row'>\n                {allCart.length === 0 ? <div className='badge badge-danger w-75 mx-auto p-3'>Empty Cart</div> : (\n                    allCart.map((cat, index) => {\n                        return <div className='col-3' key={index}>\n                            <CartItem id={index} img={cat.product.image} name={cat.product.name} quantity={cat.quantity} price={cat.product.price} total={cat.product.price * cat.quantity} />\n                        </div>\n                    })\n                )}\n\n            </div>\n            {\n                allCart.length > 0 ? (\n                    <div>\n                        <h3>Total : {totalPrice}$</h3>\n                        <button className='btn btn-success w-100 my-3' onClick={() => clearCart()}>Pay</button>\n                    </div>\n                ) : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        allCart: state.cart,\n        totalPrice: state.cart.reduce((acc, item) => acc += item.product.price * item.quantity, 0)\n    }\n}\n\n\n\n\nexport default connect(mapStateToProps, { clear_cart })(Products)\n","import React from 'react'\n\nfunction NotFounded() {\n    return (\n        <div>\n            <h1 className='error text-center position-absolute w-100'>\n                404 This Page Not Found\n            </h1>\n        </div>\n    )\n}\n\nexport default NotFounded\n","import React from 'react'\nimport logo from '../logo.png'\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom'\nimport Home from '../Pages/Home'\nimport Products from '../Pages/Products'\nimport Product from '../Pages/Product'\nimport Cart from '../Pages/Cart'\nimport NotFounded from '../Pages/NotFounded'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport { connect } from 'react-redux'\n\nfunction Navbar(props) {\n\n    return (\n        <BrowserRouter>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div className='container'>\n                    <a className=\"navbar-brand\">\n                        <img src={logo} style={{ width: '40px', height: '40px' }} alt='logo' />\n                    </a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link\" to='/'>Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to='/Products'>Products</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to='/Cart'>Cart</Link>\n                            </li>\n                            <li className='nav-item shopingIcon position-relative d-flex align-items-center'>\n                                <Link to='/Cart'>\n                                    <span className='position-absolute'>{props.totalQuantity}</span>\n                                    <FontAwesomeIcon icon={faShoppingCart} className='text-white' />\n                                </Link>\n                            </li>\n\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n\n            <Switch>\n                <Route path='/' exact component={Home} />\n                <Route path='/Products' component={Products} exact />\n                <Route path='/Products/:id' component={Product} />\n                <Route path='/Cart' component={Cart} />\n                <Route path='/:NotFound' component={NotFounded} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        totalQuantity: state.cart.reduce((acc, item) => acc += +item.quantity, 0)\n    }\n}\nexport default connect(mapStateToProps)(Navbar)\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport Reducer from './reducers'\nimport thunk from 'redux-thunk'\nimport throttle from 'lodash.throttle'\n\n// Load Products Data From Local Storage\nfunction loadState() {\n    try {\n        let state = localStorage.getItem('cart')\n\n        if (state !== null) {\n            return JSON.parse(state)\n        }\n    } catch (err) {\n\n    }\n\n    return {\n        cart: []\n    }\n\n}\n\n// Save Products Data To Local Storage\nfunction saveState(state) {\n    return localStorage.setItem('cart', JSON.stringify(state))\n}\n\nconst store = createStore(Reducer, loadState(), compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\n// Not Change The State Before 2s Cross\nstore.subscribe(throttle(() => saveState(store.getState()), 2000))\nexport default store","import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from './actionTypes'\n\n\nexport default function Reducer(state, action) {\n    switch (action.type) {\n        case ADD_TO_CART: {\n            return {\n                cart: [\n                    ...state.cart,\n                    {\n                        product: action.productInfo,\n                        quantity: action.quantity\n                    }\n                ]\n            }\n        }\n\n        case REMOVE_FROM_CART: {\n            const index = action.index\n            const newState = { ...state }\n            newState.cart.splice(index, 1)\n            return newState\n        }\n\n\n        case CLEAR_CART: {\n            const newState = { ...state }\n            newState.cart = []\n            return newState\n        }\n\n        default:\n            return state\n    }\n}","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar'\nimport store from './Store/Store'\nimport { Provider } from 'react-redux'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Navbar />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}